name: unit test spring boot app with jdk1.8
env:
  JAVA_VERSION: '8.0.282+8'                  # set this to the Java version to use
  DISTRIBUTION: adopt                  # set this to the Java distribution
  NODE_VERSION: '14.15.4'

on: [pull_request]

jobs:
  angular-test: 
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.5.1
        with: 
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          
      - name: npm install && angular test
        run: npm install
        
      - name: ng s
        run: ng s


  spring-boot-test:
    runs-on: ubuntu-20.04
#     services:
#       mysql:
#         image: mysql:5.7
#         ports:
#           - 3310:3306
#         env:
#           MYSQL_ALLOW_EMPTY_PASSWORD: yes
#           MYSQL_DATABASE: tp2
#           MYSQL_ROOT_PASSWORD: root
#         options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3 

    steps:
      - name: checkout code
        uses: actions/checkout@v3
        
#       - name: loading database
#         run: |
#           mysql -h 127.0.0.1 -P 3310 -uroot -proot tp2 --default-character-set=utf8 
      - name: build mysql
        run: |
          docker pull mysql:5.7
          docker run -p 3310:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=tp2 -d mysql:5.7 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      - name: Set up Java version
        uses: actions/setup-java@v3.0.0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}
          cache: 'maven'
      - name: maven install && unit test
        run: |
          cd api
          mvn install
          
      - name: 环境变量
        if: ${{ always() }}
        run : |
          env
          docker ps -a
    
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
          
  dingding-error: 
    runs-on: ubuntu-latest
    needs: [spring-boot-test, angular-test]
    if: ${{ failure() }}
    steps:
      - name: Send dingding notify error
        uses: zcong1993/actions-ding@master
        with:
          dingToken: b67048d462809d36c23a6a87332a9ab59dc8a3ffbd2c63e69caa218d7484f90d
          secret: SEC7f500c8f3bc47f8cc1330761aceb3c1fa45cde14e90cbb2ddcfaa1e11d499e68
          body: |
            {
              "msgtype": "text",
              "text": {
                  "content": '[打叉][打叉][打叉]  执行失败\n提交者: ${{ github.triggering_actor }}\n任务: ${{ github.event.pull_request.title }}\n${{ github.ref_type }}: ${{ github.head_ref }}\n${{ github.event_name }}: ${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}'
              }
            }
      
  dingding-success: 
    runs-on: ubuntu-latest
    needs: [spring-boot-test, angular-test]
    if: ${{ success() }}
    steps:
      - name: Send dingding notify success
        uses: zcong1993/actions-ding@master
        with:
          dingToken: b67048d462809d36c23a6a87332a9ab59dc8a3ffbd2c63e69caa218d7484f90d
          secret: SEC7f500c8f3bc47f8cc1330761aceb3c1fa45cde14e90cbb2ddcfaa1e11d499e68
          body: |
            {
              "msgtype": "text",
              "text": {
                  "content": '[微笑][微笑][微笑]  执行成功\n提交者: ${{ github.triggering_actor }}\n任务: ${{ github.event.pull_request.title }}\n${{ github.ref_type }}: ${{ github.head_ref }}\n${{ github.event_name }}: ${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}'
              }
            } 



